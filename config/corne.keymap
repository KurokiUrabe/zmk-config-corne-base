#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&led_strip { chain-length = <27>; };


#define DVORAK 0
#define BLUETOOTH 1
#define GAMING 2

/ {// TAP_DANCE settings
#define TAP_SPEED 200

// MACROS to make the the code easier to read
// include name or reference in keymap
// Format: 
//      name        reference  key1 key2 
#define TD_TAB      &td0                // TAB ESC
#define TD_CAPLOCK  &td1                // LSHIFT CAPSLOCK 
#define TD_SPC      &td2                // SPACE ENTER 
#define TD_SLSH     &td3                // SLASH QMARK
#define TD_QUOTE    &td4                // QUOTE DOUBLE_QUOTES
#define TD_EQL      &td5                // EQUAL PLUS
#define TD_BSLS     &td6                // BACKSLASH PIPE 
#define TD_MINUS    &td7                // MINUS UNDERSCORE
#define TD_SCLN     &td8                // SEMICOLON COLON 
#define TD_COMM     &td9                // COMMA LESS_THAN 
#define TD_DOT      &td10               // PERIOD GREATER_THAN 
#define TD_BACKF    &td11               // GRAVE TILDE
#define TD_ALT      &td12               // LALT GUI
#define TD_ARR      &td13               // Q AT (@)
#define TD_ATCAT    &td14               // AT CARET 
#define TD_TAW      &td15               // TAB LWIN
#define TD_SCLOCK   &td16               // (S)LSHIFT CAPSLOCK (Sticky shift)
#define TO_GAMING      &gaming_layout      // to gaming
#define TO_DVORAK      &dvorak_layout      // to gaming
    behaviors {
        gaming_layout: gaming_layout {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <TAP_SPEED>;
            quick_tap_ms = <0>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&to GAMING>, <&kp ESC>;
        };
        dvorak_layout: dvorak_layout {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&to DVORAK>, <&kp ESC>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp TAB>, <&kp ESC>;

            }; 
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp LSHIFT>, <&kp CAPSLOCK>;
            }; 
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp SPACE>, <&kp ENTER>;
            }; 
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp SLASH>, <&kp QMARK>;
            }; 
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
            }; 
        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp EQUAL>, <&kp PLUS>;
            }; 
        td6: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_6"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp BACKSLASH>, <&kp PIPE>;
            }; 
        td7: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_7"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp MINUS>, <&kp UNDERSCORE>;
            }; 
        td8: tap_dance_8 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_8"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp SEMICOLON>, <&kp COLON>;
            }; 
        td9: tap_dance_9 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_9"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp COMMA>, <&kp LESS_THAN>;
            }; 
        td10: tap_dance_10 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_10"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp PERIOD>, <&kp GREATER_THAN>;
            }; 
        td11: tap_dance_11 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_11"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp GRAVE>, <&kp TILDE>;
            };            

        td12: tap_dance_12 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_12"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp LALT>, <&kp GUI>;
            };
        td13: tap_dance_13 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_13"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp Q>, <&kp AT>;
            };
        td14: tap_dance_14 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_14"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp AT>, <&kp CARET>;
            };
        td15: tap_dance_15 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_15"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&kp TAB>, <&kp LWIN>;
            };
        td16: tap_dance_16 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_16"; 
            #binding-cells = <0>; 
            tapping-term-ms = <TAP_SPEED>; 
            bindings = <&sk LSHIFT>, <&kp CAPSLOCK>;
            }; 

        // create the shifts of dvorak 
        seven_lbkt: seven_lbkt{ 
                compatible = "zmk,behavior-mod-morph";
                label="SEVEN_LBKT";
                #binding-cells = <0>;
                bindings = <&kp N7>, <&kp LBKT>;  
                mods=<(MOD_LSFT|MOD_RSFT)>;
            }; 
        five_lbrc: five_lbrc {
                compatible = "zmk,behavior-mod-morph";
                label="FIVE_LBRC";
                #binding-cells = <0>; 
                bindings = <&kp N5>,<&kp LBRC>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        three_rbrc: three_rbrc {
                compatible = "zmk,behavior-mod-morph";
                label="THREE_RBRC";
                #binding-cells = <0>; 
                bindings = <&kp N3>,<&kp RBRC>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        one_lpar: one_lpar {
                compatible = "zmk,behavior-mod-morph";
                label="ONE_LPAR";
                #binding-cells = <0>; 
                bindings = <&kp N1>,<&kp LPAR>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        nine_equal: nine_equal {
                compatible = "zmk,behavior-mod-morph";
                label="nine_equal";
                #binding-cells = <0>; 
                bindings = <&kp N9>,    <&kp EQUAL>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        zero_s: zero_star { 
                compatible = "zmk,behavior-mod-morph";
                label="ZERO_STAR";
                #binding-cells = <0>;
                bindings = <&kp N0>, <&kp STAR>;  
                mods=<(MOD_LSFT|MOD_RSFT)>;
            }; 
        two_par: two_paren {
                compatible = "zmk,behavior-mod-morph";
                label="TWO_PAR";
                #binding-cells = <0>; 
                bindings = <&kp N2>,<&kp RPAR>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        four_pl: four_plus {
                compatible = "zmk,behavior-mod-morph";
                label="FOUR_PLUS";
                #binding-cells = <0>; 
                bindings = <&kp N4>,<&kp PLUS>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        six_rbkt: six_rbkt {
                compatible = "zmk,behavior-mod-morph";
                label="six_rbkt";
                #binding-cells = <0>; 
                bindings = <&kp N6>,<&kp RBKT>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
        eight_exlm: eight_exlm {
                compatible = "zmk,behavior-mod-morph";
                label="EIGHT_EXLM";
                #binding-cells = <0>; 
                bindings = <&kp N8>,    <&kp EXCL>;
                mods=<(MOD_LSFT|MOD_RSFT)>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        dvorak {
            display-name = "Dvorak";
            bindings = <
                TD_TAB     TD_SCLN  TD_COMM TD_DOT &kp P &kp Y                   &kp F &kp G  &kp C     &kp R   &kp L    &kp BSPC
                TD_SCLOCK  &kp A    &kp O   &kp E  &kp U &kp I                   &kp D &kp H  &kp T     &kp N   &kp S    &kp DEL
                &kp LCTRL TD_QUOTE TD_ARR  &kp J  &kp K &kp X                   &kp B &kp M  &kp W     &kp V   &kp Z    TO_GAMING
                                                &mo 1 TD_ALT  TD_SPC     &kp ENT   &kp GUI  &kp ALT
            >;
        };

        settings_media {
            display-name = "Settings/Media";
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // |RGB_TOG|RGB_EFF|RGB_EFF|RGB_EFF|  |  |  |  |C_MUTE|C_VOL_DN|C_VOL_UP|
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
            &trans         &kp N1         &kp N2         &kp N3         &kp N4         &kp N5                     &kp N6     &kp N7         &kp N8         &kp N9         &kp N0         &kp BSPC
            &bt BT_CLR     &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4               &kp C_PREV &kp C_PP       &kp C_NEXT     &trans         &trans         &trans
            &rgb_ug RGB_TOG&rgb_ug RGB_EFF&rgb_ug RGB_SPD&rgb_ug RGB_SPI&rgb_ug RGB_BRD&rgb_ug RGB_BRI            &kp C_MUTE &kp C_VOL_DN   &kp C_VOL_UP   &trans         &kp BSPC       &trans
                                                                            &kp LGUI      &trans        &kp SPACE   &kp RET   &trans    &kp RALT
            >;
        };
        gaming {
            display-name = "Gaming";
            bindings = <
                &kp TAB    &kp Q     &kp W     &kp E     &kp R    &kp T       &trans     &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP     &trans     &kp BSPC
                &kp LSHIFT &kp A     &kp S     &kp D     &kp F    &kp G       &kp C_PREV &kp C_PP   &kp C_NEXT  &trans     &trans     &trans
                &kp CTRL   &kp Z     &kp X     &kp C     &kp V    &kp B       &trans     &trans      &trans     &trans  &trans     TO_DVORAK
                                                &kp LGUI  &kp LALT &kp SPACE   &kp RET   &trans    &kp RALT
            >;
        };
    };
};